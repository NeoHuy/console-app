#!/usr/bin/env php
<?php


date_default_timezone_set("UTC");

$files = array(
  __DIR__ . '/../../vendor/autoload.php',
  __DIR__ . '/../../../../autoload.php',
  __DIR__ . '/../../../autoload.php',
  '../vendor/autoload.php',
  'vendor/autoload.php',  
);


foreach ($files as $file) {
    if (file_exists($file)) {
        require $file;
        define('COMPOSER_INSTALLED', 1);
        break;
    }
}

// check if autoloader is present
if(!defined('COMPOSER_INSTALLED'))
	die('Install Composer dependencies first, autoloader not found.');

use App\Console\Commands\HelloCommand;
use App\Console\Commands\WorkCommand;
use Symfony\Component\Console\Application;
use Dotenv\Dotenv;
use Illuminate\Database\Capsule\Manager as DB;
use App\Console\Log;

// queue dependencies
use Illuminate\Bus\Dispatcher;
use Illuminate\Container\Container;
use Illuminate\Contracts\Queue\Factory as QueueFactory;
use Illuminate\Encryption\Encrypter;
use Illuminate\Queue\Capsule\Manager as Queue;
use Illuminate\Queue\Connectors\RedisConnector;
use Illuminate\Contracts\Redis\Factory as Redis;


// load configurations

$env_file_found='yes';

try{
	$dotenv = new Dotenv(getcwd());
	$dotenv->load();
}catch(\Dotenv\Exception\InvalidPathException $e)
{
	putenv('DB_HOSTNAME=localhost');
	putenv('DB_NAME=dbname');
	putenv('DB_USER=user');
	putenv('DB_PASSWORD=pass');
  putenv('LOGFILE=./consoleapp.log');

  $env_file_found='no';
}

// create logger
$logger = new Log();
$logger->info(".env file not found. using default config values");

// load ORM
$capsule = new DB; 

$capsule->addConnection(array(
    'driver'    => 'mysql',
    'host'      => getenv('DB_HOSTNAME'),
    'database'  => getenv('DB_NAME'),
    'username'  => getenv('DB_USER'),
    'password'  => getenv('DB_PASSWORD'),
    'charset'   => 'utf8',
    'collation' => 'utf8_unicode_ci',
    'prefix'    => ''
));


$logger->info("booting MySQL Connection on " . getenv('DB_HOSTNAME'));
$capsule->bootEloquent();
$capsule->setAsGlobal();



// load queue
$queue   = new Queue;

$queue->addConnection([
    'driver' => 'beanstalkd',
    'host' => 'localhost',
    'queue' => 'default',
]);

$queue->setAsGlobal();


// boot up the application
$application = new Application("My Hello World PHAR App by Darwin Biler", "v1.0");
$application->add(new HelloCommand);
$application->add(new WorkCommand);
$application->run();